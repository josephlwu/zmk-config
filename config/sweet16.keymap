/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define BLU 1
#define NUM 2
#define FUN 3
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------
// | 7 |  8  |  9  | * |
// | 4 |  5  |  6  | / |
// | 1 |  2  |  3  | - |
// | 0 | ENT | LWR | = |
                        bindings = <
   &to DEF  &to NUM  &to FUN  &mo BLU
   &kp E    &kp F    &kp G    &kp H
   &kp I    &kp J    &kp K    &kp L
   &kp M    &kp N    &kp O    &kp P
                        >;
                };

                blu_layer {
// ------------------------
// |     |     |     |     |
// | BT1 | BT2 | BT3 | BT4 |
// |     |     |     |     |
// |     |     |     |BTCLR|
                        bindings = <
   &none        &none        &none        &trans
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 
   &none        &none        &none        &none 
   &kp 2        &none        &none        &bt BT_CLR 
                        >;
                };
                
                num_layer {
// --------------------------
// | 7 |  8  |  9  | * |
// | 4 |  5  |  6  | / |
// | 1 |  2  |  3  | - |
// | 0 | ENT | LWR | = |
                        bindings = <
   &to DEF  &to NUM   &to FUN    &mo BLU
   &kp N4   &kp N5    &kp N6     &kp SLASH
   &kp N1   &kp N2    &kp N3     &kp MINUS
   &kp N0   &kp ENTER &kp KP_DOT &kp EQUAL
                        >;
                };
                
                 func_layer {
// --------------------------
// | 7 |  8  |  9  | * |
// | 4 |  5  |  6  | / |
// | 1 |  2  |  3  | - |
// | 0 | ENT | LWR | = |
                        bindings = <
   &to DEF  &to NUM  &to FUN   &mo BLU
   &kp F13  &kp F14  &kp F15   &kp F16
   &kp F17  &kp F18  &kp F19   &kp F20
   &kp F21  &kp F22  &kp F23   &kp F24
                        >;
                };
        };
};
